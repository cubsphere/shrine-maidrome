function InputCancelMove()
{
	if (this.isAir)
	{
		if (this.flagState & 2097152 && this.input.b2 > 0 && this.input.b2 < 10)
		{
			this.u.BeginAirJump.call(this);
			return;
		}
	}
	else if (this.flagState & 2097152 && this.input.b2 > 0 && this.input.b2 < 10)
	{
		this.u.BeginJump.call(this);
		return;
	}
}

function InputAttack()
{
	if (this.input.b0 == 1)
	{
		this.u.inputCountA = 10;
	}

	if (this.input.b1 == 1)
	{
		this.u.inputCountB = 10;
	}

	if (this.input.b3 == 1)
	{
		this.u.inputCountC = 10;
	}

	this.u.inputCountA--;
	this.u.inputCountB--;
	this.u.inputCountC--;

	if (this.u.inputCountC > 0)
	{
		if (this.C_Check(40))
		{
			if (this.UseMagic(this.u.magicUse))
			{
				this.u.InputReset.call(this);

				if (this.isAir)
				{
					this.u.BeginMagic_Air.call(this);
				}
				else
				{
					this.u.BeginMagic.call(this);
				}
			}
		}
	}
	else if (this.u.inputCountB > 0)
	{
		if (this.C_Check(31) && this.input.y > 0)
		{
			if (this.cancelLV < 30)
			{
				this.u.freeCancel = true;
			}
			else
			{
				this.u.freeCancel = false;
			}

			this.u.InputReset.call(this);

			if (this.isAir)
			{
				this.u.BeginAttackUnderAir.call(this);
			}
			else
			{
				this.u.BeginAttackUnder.call(this);
			}
		}
		else if (this.C_Check(31) && this.input.y < 0)
		{
			if (this.cancelLV < 30)
			{
				this.u.freeCancel = true;
			}
			else
			{
				this.u.freeCancel = false;
			}

			this.u.InputReset.call(this);

			if (this.isAir)
			{
				this.u.BeginAttackUpperAir.call(this);
			}
			else
			{
				this.u.BeginAttackUpper.call(this);
			}
		}
		else if (this.C_Check(31) && this.input.x != 0)
		{
			if (this.cancelLV < 30)
			{
				this.u.freeCancel = true;
			}
			else
			{
				this.u.freeCancel = false;
			}

			this.u.InputReset.call(this);

			if (this.isAir)
			{
				this.u.BeginAttackFrontAir.call(this);
			}
			else
			{
				this.u.BeginAttackFront.call(this);
			}
		}
		else if (this.C_Check(30))
		{
			if (this.cancelLV < 30)
			{
				this.u.freeCancel = true;
			}
			else
			{
				this.u.freeCancel = false;
			}

			this.u.InputReset.call(this);
			this.u.BeginAttackLong.call(this);
		}
	}
	else if (this.u.inputCountA > 0)
	{
		if (this.C_Check(20))
		{
			if (this.motion == 20 + this.u.CA || this.motion == 21 + this.u.CA || this.motion == 22 + this.u.CA || this.motion == 23 + this.u.CA)
			{
				if (this.u.rushCount)
				{
					this.u.InputReset.call(this);

					if (this.isAir)
					{
						this.u.BeginAttackRushAir.call(this);
					}
					else
					{
						this.u.BeginAttackRush.call(this);
					}
				}
			}
			else
			{
				this.u.rushCount = 0;

				if (this.u.dexLV >= 2)
				{
					this.u.rushCount = 6;
				}

				this.u.InputReset.call(this);

				if (this.isAir)
				{
					this.u.BeginAttackAir.call(this);
				}
				else
				{
					this.u.BeginAttack.call(this);
				}
			}
		}
	}
}

function BeginWalk()
{
	if (this.input.x > 0)
	{
		this.direction = 1.0;
		this.vx = 4.0;
	}
	else
	{
		this.direction = -1.0;
		this.vx = -4.0;
	}

	if (this.motion != this.u.CA + 1)
	{
		this.ChangeFreeMove();
		this.fallLabel = this.u.BeginFall;
		this.SetMotion(this.u.CA + 1, 0);
	}
}

function BeginJump()
{
	if (!this.isAir)
	{
		this.ChangeFreeMove();
		this.sitLabel = this.u.BeginSit;
		this.isAir = true;
		this.collisionMask = 8 | 16;
		this.vy = -15.0;
		this.PlaySE(1000);

		if (this.input.x * this.input.x >= 0.0099999998)
		{
			this.vx = this.input.x >= 0.1 ? 4.0 : -4.0;
			this.direction = this.input.x >= 0.1 ? 1.0 : -1.0;
			this.SetMotion(this.u.CA + 4, 0);
		}
		else
		{
			this.vx = 0.0;
			this.SetMotion(this.u.CA + 3, 0);
		}
	}
}

function BeginAirJump()
{
	if (this.u.jumpCount == 0)
	{
		
		this.ChangeFreeMove();
		this.sitLabel = this.u.BeginSit;
		this.u.jumpCount++;
		this.isAir = true;
		this.collisionMask = 8 | 16;
		this.vy = -15.0;
		this.PlaySE(1000);

		if (this.input.x * this.input.x >= 0.0099999998)
		{
			this.vx = this.input.x >= 0.1 ? 4.0 : -4.0;
			this.direction = this.input.x >= 0.1 ? 1.0 : -1.0;
			this.SetMotion(this.u.CA + 4, 0);
			return;
		}
		else
		{
			this.vx = 0.0;
			this.SetMotion(this.u.CA + 3, 0);
			return;
		}
	}
}

function BeginAirSlide()
{
	if (this.input.x)
	{
		this.vx += this.input.x > 0 ? 0.2 : -0.2;

		if (this.Abs(this.vx) > 4.0)
		{
			this.vx = this.vx > 0.0 ? 4.0 : -4.0;
		}
	}
}

function ChargeEffect( c_ )
{
	switch(c_)
	{
	case 1: 
		this.PlaySE(1502);
		if (!this.isAir)
		{
			local t = this.DefaultShotTable();
			t.flag1 = 4;
			t.flag2 = 0.0;
			t.scale = 1.0;
			this.world2d.CreateActor(this.x + this.vx*this.direction, this.y + this.vy, this.direction, this.Effect_Smoke, t);
		}
		break;
	case 2:
		this.PlaySE(1503);
		if (!this.isAir)
		{
			local t = this.DefaultShotTable();
			t.flag1 = 4;
			t.flag2 = 0.0;
			t.scale = 2.0;
			this.world2d.CreateActor(this.x + this.vx*this.direction, this.y + this.vy, this.direction, this.Effect_Smoke, t);
		}
		break;
	}
}

function BeginAttack()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 20, 0);
	this.vx *= 0.5;
	this.stateLabel = this.u.Attack;
	this.fallLabel = this.u.BeginFall;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.SetEndTakeCallbackFunction(this.u.AttackFire);
}

function Attack()
{
	this.count++;

	if (this.Abs(this.vx) <= 0.1)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.1 : -0.1;
	}
}

function AttackFire()
{
	this.SetEndTakeCallbackFunction(null);
	this.PlaySE(1100);
	local t = this.DefaultShotTable();
	t.flag1 = 3;
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_SakuyaKnifeCore2x3, t);
}

function BeginAttackAir()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 21, 0);
	this.stateLabel = this.u.AttackAir;
	this.sitLabel = this.u.BeginSit;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.SetEndTakeCallbackFunction(this.u.AttackFire);
}

function AttackAir()
{
}

function BeginAttackRush()
{
	this.LabelClear();
	this.u.rushCount--;
	this.SetMotion(this.u.CA + 22, 0);
	this.stateLabel = this.u.AttackRush;
	this.fallLabel = this.u.BeginFall;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.SetEndTakeCallbackFunction(this.u.AttackFire);
}

function AttackRush()
{
	if (this.Abs(this.vx) <= 0.2)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.2 : -0.2;
	}
}

function BeginAttackRushAir()
{
	this.LabelClear();
	this.u.rushCount--;
	this.SetMotion(this.u.CA + 23, 0);
	this.stateLabel = this.u.AttackRushAir;
	this.sitLabel = this.u.BeginSit;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.SetEndTakeCallbackFunction(this.u.AttackFire);
}

function AttackRushAir()
{
}

function BeginAttackLong()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 25, 0);
	this.stateLabel = this.u.AttackLong;
	this.sitLabel = this.u.BeginSit;
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.SetEndTakeCallbackFunction(function()
	{
		this.vx = this.direction * 0.5;
	});
	
	if(!this.isAir)
	{
		this.vy = 0;
	}
	this.count = 0;
	this.vy /= 4;
	this.setG = 0;
	
}

function AttackLong()
{
	if (this.keyTake >= 2)
	{
		if(this.input.b2 > 0 && this.input.b2 < 10)
		{
			if(this.isAir)
			{
				this.u.BeginAirJump.call(this);
			} else {
				this.u.BeginJump.call(this);
			}
		}
		this.u.BeginAirSlide.call(this);
	} else {
		this.setG = 0;
		this.vy /= 4;
	}
	
	if (this.keyTake == 1)
	{
		
		if (this.count % 2 == 0)
		{
			
			
			local t = this.DefaultShotTable();
			if(this.count % 6 == 0)
			{
				this.PlaySE(1100);
				t.flag2 = 1;
			}
			t.flag1 = 4;
			t.rz = (100 - (this.rand()%201))/20 * 0.017453292;
			this.world2d.CreateActor(this.point0_x + this.vx + this.direction*15*(5*cos(t.rz)),
									 this.point0_y + this.vy + 20*sin(20*t.rz),
									 this.direction, this.Init_SakuyaKnife, t);
		}
		this.count++;

		if (this.count >= 96 || !this.input.b1 && this.count >= 21)
		{
			this.isAir = true;
			this.SetMotion(this.u.CA + 25, 2);
			this.vy = -10;
			this.PlaySE(1000);
		}
	}
	
	
}

function BeginAttackFront()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 30, 0);
	this.stateLabel = this.u.AttackFront;
	this.fallLabel = this.u.BeginFall;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.vx *= 0.25;
	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		this.u.AttackFrontFire,
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackFront()
{
	if (this.Abs(this.vx) <= 0.2)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.2 : -0.2;
	}
}

function AttackFrontFire()
{
	if (this.Abs(this.vx) <= 3.0)
	{
		this.vx -= 3.0 * this.direction;
	}

	this.PlaySE(1120);
	local t = this.DefaultShotTable();
	this.world2d.CreateActor(this.point0_x, this.point0_y, this.direction, this.SakuyaFrontKnifeCore, t);
}

function BeginAttackFrontAir()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 31, 0);
	this.stateLabel = this.u.AttackFrontAir;
	this.sitLabel = this.u.BeginSit;
	this.vx *= 0.25;
	this.vy *= 0.1;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		this.u.AttackFrontAirFire,
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackFrontAir()
{
	if (this.keyTake == 1)
	{
	}
	else
	{
		this.setG = 0.025;
	}
}

function AttackFrontAirFire()
{
	this.vx -= 3.0 * this.direction;
	this.vy -= 10.0;
	this.isAir = true;
	this.PlaySE(1120);
	local t = this.DefaultShotTable();
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, SakuyaFrontKnifeCore, t);
}

function BeginAttackUnder()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 32, 0);
	this.stateLabel = this.u.AttackUnder;
	this.fallLabel = this.u.BeginFall;
	this.count = 0;
	this.flag2 = 0;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}
	
	this.flag1 = 1;
	
	this.SetEndTakeCallbackFunction(null);
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackUnder()
{
	if (this.Abs(this.vx) <= 0.2)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.2 : -0.2;
	}
	
	if (this.keyTake == 0)
	{
		this.count++;
		if(this.count==30)
		{
			this.u.ChargeEffect.call(this, 1);
			this.flag2 = 1;
		} else if (this.count==60)
		{
			this.u.ChargeEffect.call(this, 2);
			this.flag2 = 2;
		}
		if(this.input.b1 <= 0)
		{
			this.SetMotion(32,1);
			this.SetEndTakeCallbackFunction(this.u.AttackUnderFire);
		}
		if(this.input.b2 > 0 && this.input.b2 < 10)
		{
			//this.u.BeginJump.call(this);
		}
	}
}

function AttackUnderFire()
{
	this.SetEndTakeCallbackFunction(null);
	this.PlaySE(1130);
	
	local t = this.DefaultShotTable();
	t.flag1 = this.flag1;
	switch(this.flag2)
	{
	case 0:
		t.flag2 = 3;
		t.flag3 = 0;
		break;
	case 1:
		t.flag2 = 7;
		t.flag3 = 1;
		break;
	case 2:
		t.flag2 = -1;
		t.flag3 = 1;
		break;
	}
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_SakuyaBeybladeUnder, t);
}

function BeginAttackUnderAir()
{
	this.LabelClear();
	this.isAir = true;
	this.SetMotion(this.u.CA + 33, 0);
	this.stateLabel = this.u.AttackUnderAir;
	this.sitLabel = this.u.BeginSit;

	this.count = 0;
	this.flag2 = 0;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}
	
	this.flag1 = 0;

	this.vy = -10.0;
	this.SetEndTakeCallbackFunction(this.u.AttackUnderAirFire);
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackUnderAir()
{
}

function AttackUnderAirFire()
{
	this.SetEndTakeCallbackFunction(null);
	this.PlaySE(1130);
	local t = this.DefaultShotTable();
	t.flag1 = this.flag1;
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_SakuyaBeybladeUnder, t);
}

function BeginAttackUpper()
{
	this.LabelClear();
	this.vx *= 0.25;
	this.SetMotion(this.u.CA + 34, 0);
	this.stateLabel = this.u.AttackUpper;
	this.fallLabel = this.u.BeginFall;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.u.AttackUpperFire);
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackUpper()
{
	if (this.Abs(this.vx) <= 0.2)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.2 : -0.2;
	}
}

function AttackUpperFire()
{
	this.SetEndTakeCallbackFunction(null);
	local t = this.DefaultShotTable();
	t.flag1 = this.y;
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_SakuyaKnifeCore3x5, t);
}

function BeginAttackUpperAir()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 35, 0);
	this.stateLabel = this.u.AttackUpperAir;
	this.sitLabel = this.u.BeginSit;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;

		if (this.input.x * this.direction > 0)
		{
			this.u.flag1 = 1;
		}
		else
		{
			this.u.flag1 = 0;
		}
	}
	else
	{
		this.u.flag1 = 0;
	}

	this.vx = this.vx + 2.0 * this.direction;

	if (this.vx * this.direction > 4.0)
	{
		this.vx = 4.0 * this.direction;
	}

	this.vy = -10.0;
	this.isAir = true;
	this.SetEndTakeCallbackFunction(this.u.AttackUpperAirFire);
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackUpperAir()
{
}

function AttackUpperAirFire()
{
	this.SetEndTakeCallbackFunction(null);
	this.PlaySE(1130);
	local t = this.DefaultShotTable();
	t.flag1 = this.u.flag1;
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_SakuyaBeybladeUpper, t);
}

function BeginMagic()
{
	this.LabelClear();
	this.vx *= 0.25;
	this.SetMotion(this.u.CA + 40, 0);
	this.stateLabel = this.u.Magic;
	this.fallLabel = this.u.BeginFall;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		this.u.Magic_TimeStop
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function Magic()
{
	if (this.Abs(this.vx) <= 0.2)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.2 : -0.2;
	}
}

function Magic_TimeStop()
{
	this.game.timeStop = 240;
	this.PlaySE(1144);
	this.Set_MonoColor();
}

function BeginMagic_Air()
{
	this.LabelClear();
	this.vx = 0.0;
	this.vy = 0.0;
	this.setG = 0.0;
	this.SetMotion(this.u.CA + 41, 0);
	this.stateLabel = this.u.Magic_Air;
	this.sitLabel = this.u.BeginSit;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		this.u.Magic_TimeStop
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function Magic_Air()
{
	if (this.keyTake <= 1)
	{
		this.setG = 0.0;
	}
}

